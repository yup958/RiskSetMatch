setwd("~/Desktop/Course Materials/STAT 992 - Kang/Project 1")
library(optmatch)
source("smahal.R")
source("addcaliper.R")
matching <- function(x, paired=NA){
  flag = sum(is.na(paired))==0
  n = dim(x)[1]
  p = dim(x)[2]
  colnames(x)[p-1] = "Shock"
  index = sapply(1:n, function(i){
    return(sum(sapply((1:p)[-3], function(j){
      return(is.na(x[i,j]))
    })))
  })
  index = which(index==0)
  tmp = tmp1 = x[index,-c(3)]
  propscore.model = glm(Shock ~. -ID, family = binomial, x = TRUE, y = TRUE, data = tmp)
  
  X = propscore.model$x[, -1]
  A = propscore.model$y
  logitps = predict(propscore.model)
  names(logitps) = rownames(tmp)
  distmat = smahal(A, X)
  rownames(distmat) = rownames(tmp)[tmp$Shock == 1]
  colnames(distmat) = rownames(tmp)[tmp$Shock == 0]
  distmat_caliper = addcaliper(distmat, A, logitps, calipersd = 0.5)
  if(flag){
    U = union(paired[,1], paired[,2])
    index = which(rownames(tmp1) %in% U)
    tmp1 = tmp1[-index,]
    distmat_caliper = distmat_caliper[-which(rownames(distmat_caliper) %in% U),
                                      -which(colnames(distmat_caliper) %in% U)]
  }
  tmp1 = tmp1[,-(p-1)]

  noControls = 1
  matchvec = pairmatch(distmat_caliper, controls = noControls, data = tmp1)
  
  matchvec.num = as.numeric(substr(matchvec, start = 3, stop = 10))
  matchvec.num.notNA = matchvec.num[!is.na(matchvec.num)] #To remove individuals who didn't get matched
  matchID = unique(matchvec.num.notNA)
  I = length(matchID)
  matchedPairMat = matrix(0, I, 4)
  colnames(matchedPairMat) = c("SubjectID (Treated)", "SubjectID (Control)", "PS (Treated)",
                               "PS (Control)")
  treatedSubjID = rownames(tmp1)[tmp1$Shock == 1] 
  controlSubjID = rownames(tmp1)[tmp1$Shock == 0]
  for (i in 1:I) {
    subjectIDs = which(matchvec.num == matchID[i])
    subjectIDs = as.integer(rownames(tmp1)[subjectIDs])
    matchedPairMat[i, "SubjectID (Treated)"] = subjectIDs[subjectIDs %in% treatedSubjID]
    matchedPairMat[i, "SubjectID (Control)"] = subjectIDs[subjectIDs %in% controlSubjID]
    matchedPairMat[i, "PS (Treated)"] = round(logitps[which(names(logitps)
                                                            == matchedPairMat[i, "SubjectID (Treated)"])], 3)
    matchedPairMat[i, "PS (Control)"] = round(logitps[which(names(logitps)
                                                            == matchedPairMat[i, "SubjectID (Control)"])], 3)
  }
  knitr::kable(head(matchedPairMat), caption = "430 Matched Pairs")
  if(flag)
    return(rbind(paired,matchedPairMat))
  else
    return(matchedPairMat)
}

